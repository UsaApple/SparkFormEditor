<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA7akaAKqIQQD//wAD//4AAP//AAD//wAC654UAOGmEgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAO2pHACbgEoAtpkpAKmFKWqngy1GuI0uAOadEAHhohMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+rAADxqxsB1p0oAMeYJz3VnSTR1J4kxMKWIxPHkSMB6qgUAOqs
        LAAAAAAAAAAAAAAAAAAAAAAAAAAAAOSqFwD/KwAA4qkjAuS4KwHdoyXM2qMnz+CnJ/DRniaa47MoAN2i
        IALqrCoA4aEcAAAAAAAAAAAAAAAAAAAAAADiqBoA67AfAt6tJwC9lCVe6Ksm/9iiJ8Hgpyfe5qon/cKZ
        KDfRniIA5aokAtqXIwAAAAAAAAAAAAAAAADprB8A46kYAdWqKgHPsUUT4Kck5uqtKP3WoSfF36cn3Oqt
        KP7boSXO3LEkCdypKwLXkyEA6LAYAAAAAAAAAAAA6KgfAOqtHQPesB0Ay5UlluisJ//prSn+1p4kxd6l
        Jd7prSn+6Kwn/8iWL33ktSUA7rEhA+SqGADKnyQA6ZUhAOysHAHRnR4AvJcfNuSrKfznqyf66aod/9qs
        MMrhrivi6Kke/+isKPzjqiX0zKseJNSoIQDnrRIBw50gAOB6KgHgrScC3bEjANefJcXpqh7/67Yq++W6
        UP/NjGD80plh/em+Sf/rtSj756oe/9GcJrjdsiMA3a8mArKSGADyrB4H36siAMCPImbqsib/57xQ+tGU
        YP+4TTT/rygD/60qB/+6VDv/0pJS/+i7RPrpsCL/xZIiXNupJQDoqR8H07ArAcenJBzitEXl1Ztg/LVF
        KvyrHAD+sysA/60iAP6xLwr+16yh/8R6bv6+YU383KVg/OO1QOPMpB8b57U0AsaHagCzhGuDvl0+/60e
        BP/BXDv6y3FR/a0nBf/JfWr+69zY/t67sf7CaE3+szUN+7AnCvvBZ0T/vI9qmc6PbgCzDwACsRkMF6Ak
        C3aoKwbmxXZf/+jDvv/v39778enn/sBjTf+sIQD8siUA/rQwAP+sMAH3niIFlKYgDyalGAICsRcAAMUf
        BQC2IAwArCIVF6MbAoSlJgXoxG1V/+fDu//FZkv/sioB/7EzB/uiLQ+lqCAQK6sgDACzIgIAqyIPAP0W
        AAC8IgcAtScRA8EXAACtIhIAqyMSHJ4ZAIqvOhjotDQK958rDLGgIxQ5qiAPALEfBgAuo+ADtSMFAQD/
        AAAAAAAAtSQHANgbAAC+GQACuR4MCLwdAQCqNicAhSUQS48pEoCHNSUAmygTAK8kAAa1HwcEkxsAAL8i
        AgAAAAAA//8AAP7/AAD+fwAA/D8AAPw/AAD4HwAA8A8AAPAPAADgBwAAwAcAAMADAACAAQAAwAMAAPAP
        AAD8PwAA/38AAA==
</value>
  </data>
</root>